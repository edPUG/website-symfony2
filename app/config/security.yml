security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Application\Sonata\UserBundle\Entity\User: sha512

    role_hierarchy:
      ROLE_ADMIN: ROLE_USER
      ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_SONATA_ADMIN, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH, SONATA]
      SONATA:
        - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT # if you are not using acl then this line must be uncommented
        - ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT
    providers:
        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
        fos_userbundle:
                    id: fos_user.user_manager
#        hwi:
#            id: hwi_oauth.user.provider

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false


        # -> custom firewall for the admin area of the URL
        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:           /admin/logout
            anonymous:          true

        # -> end custom configuration

        # default login area for standard users
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
                login_path: /login
                check_path: /login_check
#            oauth:
#                resource_owners:
#                    facebook:           "/login/check-facebook"
#                login_path:        /login
#                failure_path:      /login
#                oauth_user_provider:
#                    #this is my custom user provider, created from FOSUBUserProvider - will manage the
#                    #automatic user registration on your site, with data from the provider (facebook. google, etc.)
#                    service: oauth_user_provider
#                success_handler: irnbru_website_framework.security_handler
            logout:
                path: /logout
                target: /logout-connector
                handlers: ['sonata.page.cms_manager_selector']
            anonymous:    true

#        login:
#            pattern:  ^/login$
#            security: false
#
#            remember_me:
#                key: "%secret%"
#                lifetime: 31536000 # 365 days in seconds
#                path: /
#                domain: ~ # Defaults to the current domain from $_SERVER

    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/connect, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
    acl:
        connection: default