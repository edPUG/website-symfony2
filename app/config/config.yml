imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: @AppBundle/Resources/config/admin.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    sonata.page.service.default.class:      Application\Sonata\PageBundle\Page\Service\DefaultPageService


framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true
                mappings:
                    ApplicationSonataUserBundle: ~
#                    ApplicationSonataMediaBundle: ~
                    ApplicationSonataPageBundle: ~
                    SonataUserBundle: ~
                    FOSUserBundle: ~
                    SonataPageBundle: ~
                    SonataNotificationBundle: ~
                    ApplicationSonataNotificationBundle: ~
#                    SonataMediaBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }



fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User

    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group

# SonataAdminBundle Configuration
sonata_block:
    default_contexts: [cms]
    context_manager: sonata.page.block.context_manager
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        sonata.block.service.text:
            contexts: [cms,admin,sonata_page_bundle]
    context_manager: sonata.page.block.context_manager


cmf_routing:
    chain:
        routers_by_id:
            # enable the DynamicRouter with high priority to allow overwriting configured routes with content
            #cmf_routing.dynamic_router: 200
            # enable the symfony default router with a lower priority
            sonata.page.router: 150
            router.default: 100

sonata_page:
    multisite: host
    use_streamed_response: true # set the value to false in debug mode or if the reverse proxy does not handle streamed response
    ignore_route_patterns:
        - ^(.*)admin(.*)   # ignore admin route, ie route containing 'admin'
        - ^_(.*)          # ignore symfony routes

    ignore_routes:
        - sonata_page_cache_esi
        - sonata_page_cache_ssi
        - sonata_page_js_sync_cache
        - sonata_page_js_async_cache
        - sonata_cache_esi
        - sonata_cache_ssi
        - sonata_cache_js_async
        - sonata_cache_js_sync
        - sonata_cache_apc

    ignore_uri_patterns:
        - ^/admin\/   # ignore admin route, ie route containing 'admin'

    page_defaults:
        homepage: {decorate: false} # disable decoration for homepage, key - is a page route

    default_template: default # template key from templates section, used as default for pages
    templates:
        default:
            path: 'AppBundle::sonataPageBundleLayout.html.twig'
            name: 'default'
            containers:
                header:
                    name: Header
                content_top:
                    name: Top content
                content:
                    name: Main content
                content_bottom:
                    name: Bottom content
                footer:
                    name: Footer
            matrix:
                layout: |
                    HHHHHHHH
                    TTTTBBBB
                    TTTTBBBB
                    TTTTBBBB
                    TTTTBBBB
                    CCCCCCCC
                    CCCCCCCC
                    FFFFFFFF

                mapping:
                    H: header
                    T: content_top
                    C: content
                    B: content_bottom
                    F: footer
        2columns: { path: 'SonataPageBundle::2columns_layout.html.twig', name: '2 columns layout' }
    # Assets loaded by default in template
     # Generates a snapshot when a page is saved (from the admin)
      # manage the http errors
    catch_exceptions:
        not_found: [404]    # render 404 page with "not_found" key (name generated: _page_internal_error_{key})
        fatal:     [500]    # so you can use the same page for different http errors or specify specific page for each error






sonata_seo:
#    default:          sonata.seo.page.default
    encoding:         UTF-8
    page:
        title:            Sonata Project
        metas:
            name:
                keywords:             foo bar
                description:          The description
                robots:               index, follow

            property:
                # Facebook application settings
                #'fb:app_id':          XXXXXX
                #'fb:admins':          admin1, admin2

                # Open Graph information
                # see http://developers.facebook.com/docs/opengraphprotocol/#types or http://ogp.me/
                'og:site_name':       Sonata Project Sandbox
                'og:description':     A demo of the some rich bundles for your Symfony2 projects

            http-equiv:
                'Content-Type':         text/html; charset=utf-8
                #'X-Ua-Compatible':      IE=EmulateIE7

            charset:
                UTF-8:    ''

        head:
            'xmlns':              http://www.w3.org/1999/xhtml
            'xmlns:og':           http://opengraphprotocol.org/schema/
            #'xmlns:fb':           "http://www.facebook.com/2008/fbml"


sonata_notification:
    backend: sonata.notification.backend.runtime

    queues:
        - { queue: sonata_page, types: [sonata.page.create_snapshot, sonata.page.create_snapshots]}
        - { queue: catchall, default: true}

    backends:
        doctrine:
            message_manager: sonata.notification.manager.message.default
            max_age:         86400     # max age in second
            pause:           500000    # delay in microseconds
            batch_size:      10        # number of messages on each iteration
            states:                    # raising errors level
                in_progress: 10
                error:       20
                open:        100
                done:        10000


sonata_admin:
    title: "Admin"
    title_logo: "bundles/appbundle/images/admin/logo.png"
    templates:
        layout: AppBundle:Admin:standardLayout.html.twig
#    assets:
#        stylesheets:
#            # Defaults:
#            - bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css
#            - bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css
#            - bundles/sonatacore/vendor/ionicons/css/ionicons.min.css
#            - bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.min.css
#            - bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-black.min.css
#            - bundles/sonataadmin/vendor/iCheck/skins/flat/blue.css
#            - bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css
#            - bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css
#            - bundles/sonatacore/vendor/select2/select2.css
#            - bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css
#            - bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css
#            - bundles/sonataadmin/css/styles.css
#            - bundles/sonataadmin/css/layout.css
#            - bundles/sonataadmin/css/tree.css
#            - bundles/sonataadmin/vendor/bootstrap/dist/css/bootstrap.min.css
#            - bundles/sonatapage/sonata-page.front.min.css
#            - bundles/sonatapage/sonata-page.back.min.css
#        javascripts:
#            # Defaults:
#            - bundles/sonatacore/vendor/jquery/dist/jquery.min.js
#            - bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js
#            - bundles/sonatacore/vendor/moment/min/moment.min.js
#            - bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js
#            - bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js
#            - bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js
#            - bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js
#            - bundles/sonataadmin/jquery/jquery.form.js
#            - bundles/sonataadmin/jquery/jquery.confirmExit.js
#            - bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js
#            - bundles/sonatacore/vendor/select2/select2.min.js
#            - bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js
#            - bundles/sonataadmin/vendor/iCheck/icheck.min.js
#            - bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js
#            - bundles/sonataadmin/Admin.js
#            - bundles/sonataadmin/treeview.js
#            - bundles/sonatapage/sonata-page.front.min.js
#            - bundles/sonatapage/sonata-page.back.min.js
    dashboard:
        blocks:
            -
                position: left
                type: sonata.admin.block.admin_list
            -
                position: right
                type: sonata.block.service.text
                settings:
                    content: >
                        <h2>Welcome to Williams & Glynn Branch Finder Admin</h2>

sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 100 , quality: 85}
                big:   { width: 500 , quality: 85}
                standard:   { width: 100% , quality: 100}
        clans:  # the default context is mandatory
            providers:
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                thumb: { width: 75 , quality: 0}
                thumb-retina: { width: 150 , quality: 0}
                medium: { width: 210 , quality: 0}
                full:   { width: 420 , quality: 0}
    providers:
        image:
            resizer: sonata.media.resizer.square

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     true

ivory_ck_editor:
    default_config: default
    configs:
        default:
            filebrowserBrowseRoute: admin_sonata_media_media_ckeditor_browser
            filebrowserImageBrowseRoute: admin_sonata_media_media_ckeditor_browser
            # Display images by default when clicking the image dialog browse button
            filebrowserImageBrowseRouteParameters:
                provider: sonata.media.provider.image
            filebrowserUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserUploadRouteParameters:
                provider: sonata.media.provider.file
            # Upload file as image when sending a file from the image dialog
            filebrowserImageUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserImageUploadRouteParameters:
                provider: sonata.media.provider.image



sonata_formatter:
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
#                - sonata.media.formatter.twig

        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
#                - sonata.media.formatter.twig

        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
#                - sonata.media.formatter.twig

        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
#                - sonata.media.formatter.twig

        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions

    ckeditor:
        templates:
            browser: 'SonataFormatterBundle:Ckeditor:browser.html.twig'
            upload: 'SonataFormatterBundle:Ckeditor:upload.html.twig'
